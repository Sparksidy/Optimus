<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Distribution|x64">
      <Configuration>Distribution</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{D6B0A8D2-4290-276E-4BA8-B244B7068ECF}</ProjectGuid>
    <IgnoreWarnCompileDuplicatedFilename>true</IgnoreWarnCompileDuplicatedFilename>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>Optimus</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Distribution|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Distribution|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\bin\Debug-windows-x86_64\Optimus\</OutDir>
    <IntDir>..\bin-int\Debug-windows-x86_64\Optimus\</IntDir>
    <TargetName>Optimus</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\bin\Release-windows-x86_64\Optimus\</OutDir>
    <IntDir>..\bin-int\Release-windows-x86_64\Optimus\</IntDir>
    <TargetName>Optimus</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Distribution|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\bin\Distribution-windows-x86_64\Optimus\</OutDir>
    <IntDir>..\bin-int\Distribution-windows-x86_64\Optimus\</IntDir>
    <TargetName>Optimus</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>OP_PLATFORM_WINDOWS;OP_BUILD_DLL;GLFW_INCLUDE_NONE;NOMINMAX;OP_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>src;ThirdParty\spdlog\include;ThirdParty\GLAD\include;ThirdParty\GLFW\include;ThirdParty\imgui;ThirdParty\VulkanSDK\Vulkan1\Include;ThirdParty\GLM\glm;ThirdParty\stb_image;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <AdditionalOptions>/MDd %(AdditionalOptions)</AdditionalOptions>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>opengl32.lib;ThirdParty\VulkanSDK\Vulkan1\Lib\vulkan-1.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ImportLibrary>..\bin\Debug-windows-x86_64\Optimus\Optimus.lib</ImportLibrary>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST ..\bin\Debug-windows-x86_64\Optimus\Optimus.dll\ (xcopy /Q /E /Y /I ..\bin\Debug-windows-x86_64\Optimus\Optimus.dll ..\bin\Debug-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I ..\bin\Debug-windows-x86_64\Optimus\Optimus.dll ..\bin\Debug-windows-x86_64\Sandbox &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>OP_PLATFORM_WINDOWS;OP_BUILD_DLL;GLFW_INCLUDE_NONE;NOMINMAX;OP_RELEASE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>src;ThirdParty\spdlog\include;ThirdParty\GLAD\include;ThirdParty\GLFW\include;ThirdParty\imgui;ThirdParty\VulkanSDK\Vulkan1\Include;ThirdParty\GLM\glm;ThirdParty\stb_image;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalOptions>/MDd %(AdditionalOptions)</AdditionalOptions>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>opengl32.lib;ThirdParty\VulkanSDK\Vulkan1\Lib\vulkan-1.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ImportLibrary>..\bin\Release-windows-x86_64\Optimus\Optimus.lib</ImportLibrary>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST ..\bin\Release-windows-x86_64\Optimus\Optimus.dll\ (xcopy /Q /E /Y /I ..\bin\Release-windows-x86_64\Optimus\Optimus.dll ..\bin\Release-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I ..\bin\Release-windows-x86_64\Optimus\Optimus.dll ..\bin\Release-windows-x86_64\Sandbox &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Distribution|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>OP_PLATFORM_WINDOWS;OP_BUILD_DLL;GLFW_INCLUDE_NONE;NOMINMAX;OP_DIST;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>src;ThirdParty\spdlog\include;ThirdParty\GLAD\include;ThirdParty\GLFW\include;ThirdParty\imgui;ThirdParty\VulkanSDK\Vulkan1\Include;ThirdParty\GLM\glm;ThirdParty\stb_image;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalOptions>/MDd %(AdditionalOptions)</AdditionalOptions>
      <LanguageStandard>stdcpp17</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>opengl32.lib;ThirdParty\VulkanSDK\Vulkan1\Lib\vulkan-1.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ImportLibrary>..\bin\Distribution-windows-x86_64\Optimus\Optimus.lib</ImportLibrary>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST ..\bin\Distribution-windows-x86_64\Optimus\Optimus.dll\ (xcopy /Q /E /Y /I ..\bin\Distribution-windows-x86_64\Optimus\Optimus.dll ..\bin\Distribution-windows-x86_64\Sandbox &gt; nul) ELSE (xcopy /Q /Y /I ..\bin\Distribution-windows-x86_64\Optimus\Optimus.dll ..\bin\Distribution-windows-x86_64\Sandbox &gt; nul)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="src\Optimus.h" />
    <ClInclude Include="src\Optimus\AnimatedMesh.h" />
    <ClInclude Include="src\Optimus\Application.h" />
    <ClInclude Include="src\Optimus\Core.h" />
    <ClInclude Include="src\Optimus\EntryPoint.h" />
    <ClInclude Include="src\Optimus\Events\ApplicationEvents.h" />
    <ClInclude Include="src\Optimus\Events\Event.h" />
    <ClInclude Include="src\Optimus\Events\KeyboardEvents.h" />
    <ClInclude Include="src\Optimus\Events\MouseEvents.h" />
    <ClInclude Include="src\Optimus\Graphics\Buffers\Buffer.h" />
    <ClInclude Include="src\Optimus\Graphics\Buffers\UniformBuffer.h" />
    <ClInclude Include="src\Optimus\Graphics\Buffers\UniformHandler.h" />
    <ClInclude Include="src\Optimus\Graphics\Commands\CommandBuffer.h" />
    <ClInclude Include="src\Optimus\Graphics\Commands\CommandPool.h" />
    <ClInclude Include="src\Optimus\Graphics\Core\Graphics.h" />
    <ClInclude Include="src\Optimus\Graphics\Core\RenderStage.h" />
    <ClInclude Include="src\Optimus\Graphics\Core\Renderer.h" />
    <ClInclude Include="src\Optimus\Graphics\Core\SubRender.h" />
    <ClInclude Include="src\Optimus\Graphics\Core\SubRenderHolder.h" />
    <ClInclude Include="src\Optimus\Graphics\Descriptors\Descriptor.h" />
    <ClInclude Include="src\Optimus\Graphics\Descriptors\DescriptorHandler.h" />
    <ClInclude Include="src\Optimus\Graphics\Descriptors\DescriptorSet.h" />
    <ClInclude Include="src\Optimus\Graphics\Devices\DebugCallbacks.h" />
    <ClInclude Include="src\Optimus\Graphics\Devices\Instance.h" />
    <ClInclude Include="src\Optimus\Graphics\Devices\LogicalDevice.h" />
    <ClInclude Include="src\Optimus\Graphics\Devices\PhysicalDevice.h" />
    <ClInclude Include="src\Optimus\Graphics\Devices\Surface.h" />
    <ClInclude Include="src\Optimus\Graphics\Images\Image.h" />
    <ClInclude Include="src\Optimus\Graphics\Images\Image2D.h" />
    <ClInclude Include="src\Optimus\Graphics\Models\QuadModel.h" />
    <ClInclude Include="src\Optimus\Graphics\Models\Vertex2d.h" />
    <ClInclude Include="src\Optimus\Graphics\Pipelines\GraphicsPipeline.h" />
    <ClInclude Include="src\Optimus\Graphics\Pipelines\Pipeline.h" />
    <ClInclude Include="src\Optimus\Graphics\Pipelines\Shader.h" />
    <ClInclude Include="src\Optimus\Graphics\RenderPass\Framebuffers.h" />
    <ClInclude Include="src\Optimus\Graphics\RenderPass\RenderPass.h" />
    <ClInclude Include="src\Optimus\Graphics\RenderPass\SwapChain.h" />
    <ClInclude Include="src\Optimus\Graphics\Subrenders\SubRender2D.h" />
    <ClInclude Include="src\Optimus\ISystem.h" />
    <ClInclude Include="src\Optimus\Imgui\ImguiLayer.h" />
    <ClInclude Include="src\Optimus\Input\Input.h" />
    <ClInclude Include="src\Optimus\KeyCodes.h" />
    <ClInclude Include="src\Optimus\Layer.h" />
    <ClInclude Include="src\Optimus\LayerStack.h" />
    <ClInclude Include="src\Optimus\Log.h" />
    <ClInclude Include="src\Optimus\Mesh.h" />
    <ClInclude Include="src\Optimus\Scene.h" />
    <ClInclude Include="src\Optimus\Utilities\Macros.h" />
    <ClInclude Include="src\Optimus\Utilities\NonCopyable.h" />
    <ClInclude Include="src\Optimus\Utilities\TypeInfo.h" />
    <ClInclude Include="src\Optimus\Window.h" />
    <ClInclude Include="src\Platforms\ImguiGLFW.h" />
    <ClInclude Include="src\Platforms\ImguiOpenGLRenderer.h" />
    <ClInclude Include="src\Platforms\ImguiVulkanRenderer.h" />
    <ClInclude Include="src\pch.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="src\Optimus\Application.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Buffers\Buffer.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Buffers\UniformBuffer.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Buffers\UniformHandler.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Commands\CommandBuffer.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Commands\CommandPool.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Core\Graphics.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Core\RenderStage.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Core\SubRenderHolder.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Descriptors\DescriptorHandler.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Descriptors\DescriptorSet.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Devices\Instance.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Devices\LogicalDevice.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Devices\PhysicalDevice.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Devices\Surface.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Images\Image.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Images\Image2D.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Models\QuadModel.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Pipelines\GraphicsPipeline.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Pipelines\Shader.cpp" />
    <ClCompile Include="src\Optimus\Graphics\RenderPass\Framebuffers.cpp" />
    <ClCompile Include="src\Optimus\Graphics\RenderPass\RenderPass.cpp" />
    <ClCompile Include="src\Optimus\Graphics\RenderPass\SwapChain.cpp" />
    <ClCompile Include="src\Optimus\Graphics\Subrenders\SubRender2D.cpp" />
    <ClCompile Include="src\Optimus\Imgui\ImguiLayer.cpp" />
    <ClCompile Include="src\Optimus\Input\Input.cpp" />
    <ClCompile Include="src\Optimus\LayerStack.cpp" />
    <ClCompile Include="src\Optimus\Log.cpp" />
    <ClCompile Include="src\Optimus\Window.cpp" />
    <ClCompile Include="src\Platforms\ImguiGLFW.cpp" />
    <ClCompile Include="src\Platforms\ImguiOpenGLRenderer.cpp" />
    <ClCompile Include="src\Platforms\ImguiVulkanRenderer.cpp" />
    <ClCompile Include="src\pch.cpp">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="ThirdParty\GLFW\GLFW.vcxproj">
      <Project>{154B857C-0182-860D-AA6E-6C109684020F}</Project>
    </ProjectReference>
    <ProjectReference Include="ThirdParty\GLAD\GLAD.vcxproj">
      <Project>{5D4A857C-4981-860D-F26D-6C10DE83020F}</Project>
    </ProjectReference>
    <ProjectReference Include="ThirdParty\imgui\ImGui.vcxproj">
      <Project>{C0FF640D-2C14-8DBE-F595-301E616989EF}</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>